rules:
  # MASVS-CRYPTO: Weak Cryptographic Algorithms (iOS)
  # Based on MASTG Mobile App Cryptography guidelines
  # Detects usage of weak/broken cryptographic algorithms in iOS

  - id: mastg-ios-weak-hash-md5
    patterns:
      - pattern-either:
          - pattern: CC_MD5($DATA, $LEN, $HASH)
          - pattern: |
              import CryptoKit
              ...
              Insecure.MD5.hash(...)
    message: |
      MD5 hash algorithm detected (MASVS-CRYPTO).
      MD5 is cryptographically broken and vulnerable to collision attacks.
      Use SHA-256, SHA-384, SHA-512, or CryptoKit's secure hashing instead.
    severity: ERROR
    languages:
      - swift
      - objc
    metadata:
      category: security
      cwe: "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      owasp-mobile: "M10: Insufficient Cryptography"
      mastg-id: "MASTG-CRYPTO"
      masvs: "MASVS-CRYPTO-1"
      confidence: HIGH

  - id: mastg-ios-weak-hash-sha1
    patterns:
      - pattern-either:
          - pattern: CC_SHA1($DATA, $LEN, $HASH)
          - pattern: |
              import CryptoKit
              ...
              Insecure.SHA1.hash(...)
    message: |
      SHA-1 hash algorithm detected (MASVS-CRYPTO).
      SHA-1 is cryptographically broken and vulnerable to collision attacks.
      Use SHA-256, SHA-384, SHA-512, or CryptoKit's secure hashing instead.
    severity: ERROR
    languages:
      - swift
      - objc
    metadata:
      category: security
      cwe: "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      owasp-mobile: "M10: Insufficient Cryptography"
      mastg-id: "MASTG-CRYPTO"
      masvs: "MASVS-CRYPTO-1"
      confidence: HIGH

  - id: mastg-ios-weak-cipher-des
    patterns:
      - pattern-either:
          - pattern: kCCAlgorithmDES
          - pattern: kCCAlgorithm3DES
          - pattern: CCCrypt($OP, kCCAlgorithmDES, ...)
          - pattern: CCCrypt($OP, kCCAlgorithm3DES, ...)
    message: |
      DES or 3DES cipher detected (MASVS-CRYPTO).
      DES and 3DES are outdated block ciphers with insufficient key sizes.
      Use AES-256 with GCM mode (kCCAlgorithmAES) instead.
    severity: ERROR
    languages:
      - swift
      - objc
    metadata:
      category: security
      cwe: "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      owasp-mobile: "M10: Insufficient Cryptography"
      mastg-id: "MASTG-CRYPTO"
      masvs: "MASVS-CRYPTO-1"
      confidence: HIGH

  - id: mastg-ios-weak-cipher-rc4
    patterns:
      - pattern-either:
          - pattern: kCCAlgorithmRC4
          - pattern: CCCrypt($OP, kCCAlgorithmRC4, ...)
    message: |
      RC4 stream cipher detected (MASVS-CRYPTO).
      RC4 is a broken stream cipher and should not be used.
      Use AES-256 with GCM mode (kCCAlgorithmAES) instead.
    severity: ERROR
    languages:
      - swift
      - objc
    metadata:
      category: security
      cwe: "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      owasp-mobile: "M10: Insufficient Cryptography"
      mastg-id: "MASTG-CRYPTO"
      masvs: "MASVS-CRYPTO-1"
      confidence: HIGH

  - id: mastg-ios-ecb-mode-encryption
    patterns:
      - pattern-either:
          - pattern: kCCOptionECBMode
          - pattern: CCCrypt(..., kCCOptionECBMode, ...)
    message: |
      ECB (Electronic Codebook) mode encryption detected (MASVS-CRYPTO).
      ECB mode is insecure as identical plaintext blocks produce identical ciphertext blocks.
      Use AES with GCM mode or CBC mode with proper IV instead.
    severity: ERROR
    languages:
      - swift
      - objc
    metadata:
      category: security
      cwe: "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      owasp-mobile: "M10: Insufficient Cryptography"
      mastg-id: "MASTG-CRYPTO"
      masvs: "MASVS-CRYPTO-1"
      confidence: HIGH

  - id: mastg-ios-static-encryption-key
    patterns:
      - pattern-either:
          - pattern: |
              let $KEY = "$VALUE"
              ...
              CCCrypt(..., $KEY, ...)
          - pattern: |
              let $KEY: [UInt8] = [...]
              ...
              CCCrypt(..., $KEY, ...)
    message: |
      Hardcoded encryption key detected (MASVS-CRYPTO).
      Hardcoding encryption keys in source code is insecure.
      Generate keys using SecRandomCopyBytes and store in Keychain.
    severity: ERROR
    languages:
      - swift
    metadata:
      category: security
      cwe: "CWE-321: Use of Hard-coded Cryptographic Key"
      owasp-mobile: "M10: Insufficient Cryptography"
      mastg-id: "MASTG-CRYPTO"
      masvs: "MASVS-CRYPTO-1"
      confidence: HIGH

  - id: mastg-ios-weak-random-arc4random
    patterns:
      - pattern-either:
          - pattern: arc4random()
          - pattern: arc4random_uniform($BOUND)
      - pattern-not-inside: |
          // $COMMENT
          ...
          arc4random()
    message: |
      arc4random() usage detected (MASVS-CRYPTO).
      While arc4random() is acceptable for non-cryptographic purposes,
      use SecRandomCopyBytes() for cryptographic operations and key generation.
    severity: WARNING
    languages:
      - swift
      - objc
    metadata:
      category: security
      cwe: "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator"
      owasp-mobile: "M10: Insufficient Cryptography"
      mastg-id: "MASTG-CRYPTO"
      masvs: "MASVS-CRYPTO-1"
      confidence: MEDIUM

  - id: mastg-ios-deprecated-commoncrypto
    patterns:
      - pattern-either:
          - pattern: CCCrypt(...)
          - pattern: CCCryptorCreate(...)
    message: |
      CommonCrypto API usage detected (MASVS-CRYPTO).
      Consider migrating to CryptoKit (iOS 13+) which provides modern,
      safer cryptographic APIs with better performance.
    severity: INFO
    languages:
      - swift
      - objc
    metadata:
      category: security
      mastg-id: "MASTG-CRYPTO"
      masvs: "MASVS-CRYPTO-1"
      confidence: LOW
