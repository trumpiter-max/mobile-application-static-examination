rules:
  # MASVS-CODE: Hardcoded Secrets and API Keys
  # Based on MASWE-0005: API Keys Hardcoded in the App Package
  # Detects hardcoded sensitive credentials across multiple platforms

  - id: mastg-hardcoded-api-key-string
    patterns:
      - pattern-either:
          # Variable declarations
          - pattern: $VAR = "$VALUE"
          - pattern: let $VAR = "$VALUE"
          - pattern: const $VAR = "$VALUE"
          - pattern: var $VAR = "$VALUE"
          - pattern: String $VAR = "$VALUE"
      - metavariable-regex:
          metavariable: $VAR
          regex: (?i).*(api[_-]?key|apikey|api[_-]?secret|access[_-]?key|secret[_-]?key|private[_-]?key|auth[_-]?token|bearer[_-]?token).*
      - metavariable-regex:
          metavariable: $VALUE
          regex: ^[A-Za-z0-9+/=_-]{20,}$
    message: |
      Hardcoded API key or secret detected (MASVS-CODE).
      Hardcoding secrets in source code exposes them to reverse engineering.
      Use secure storage (Android Keystore/iOS Keychain) and environment
      variables. Consider using a backend proxy for API calls.
    severity: ERROR
    languages:
      - java
      - kotlin
      - swift
      - objc
      - javascript
      - typescript
      - python
    metadata:
      category: security
      cwe: "CWE-798: Use of Hard-coded Credentials"
      owasp-mobile: "M9: Insecure Data Storage"
      maswe: "MASWE-0005"
      masvs: "MASVS-CODE-4"
      confidence: HIGH

  - id: mastg-hardcoded-aws-credentials
    patterns:
      - pattern-either:
          - pattern: $VAR = "AKIA..."
          - pattern: let $VAR = "AKIA..."
          - pattern: const $VAR = "AKIA..."
    message: |
      Hardcoded AWS access key detected (MASVS-CODE).
      AWS access keys starting with 'AKIA' should never be hardcoded.
      Use AWS Cognito, IAM roles, or secure credential management.
    severity: ERROR
    languages:
      - java
      - kotlin
      - swift
      - objc
      - javascript
      - typescript
      - python
      - go
    metadata:
      category: security
      cwe: "CWE-798: Use of Hard-coded Credentials"
      owasp-mobile: "M9: Insecure Data Storage"
      maswe: "MASWE-0005"
      masvs: "MASVS-CODE-4"
      confidence: HIGH

  - id: mastg-hardcoded-password
    patterns:
      - pattern-either:
          - pattern: $VAR = "$VALUE"
          - pattern: let $VAR = "$VALUE"
          - pattern: const $VAR = "$VALUE"
          - pattern: String $VAR = "$VALUE"
      - metavariable-regex:
          metavariable: $VAR
          regex: (?i).*(password|passwd|pwd|pass).*
      - metavariable-regex:
          metavariable: $VALUE
          regex: ^.{6,}$
      - pattern-not: $VAR = ""
    message: |
      Hardcoded password detected (MASVS-CODE).
      Passwords should never be hardcoded in source code.
      Use secure storage mechanisms and proper authentication flows.
    severity: ERROR
    languages:
      - java
      - kotlin
      - swift
      - objc
      - javascript
      - typescript
      - python
      - go
    metadata:
      category: security
      cwe: "CWE-259: Use of Hard-coded Password"
      owasp-mobile: "M9: Insecure Data Storage"
      maswe: "MASWE-0005"
      masvs: "MASVS-CODE-4"
      confidence: MEDIUM

  - id: mastg-hardcoded-private-key
    patterns:
      - pattern-either:
          - pattern: |
              "$KEY"
          - pattern: |
              """
              $KEY
              """
      - metavariable-regex:
          metavariable: $KEY
          regex: -----BEGIN (RSA |EC |DSA )?PRIVATE KEY-----
    message: |
      Hardcoded private key detected (MASVS-CODE).
      Private keys should never be embedded in application code.
      Use platform-specific secure storage (Keystore/Keychain) or
      generate keys at runtime.
    severity: ERROR
    languages:
      - java
      - kotlin
      - swift
      - objc
      - javascript
      - typescript
      - python
      - go
    metadata:
      category: security
      cwe: "CWE-321: Use of Hard-coded Cryptographic Key"
      owasp-mobile: "M9: Insecure Data Storage"
      maswe: "MASWE-0013"
      masvs: "MASVS-CRYPTO-2"
      confidence: HIGH

  - id: mastg-hardcoded-jwt-secret
    patterns:
      - pattern-either:
          - pattern: $VAR = "$VALUE"
          - pattern: let $VAR = "$VALUE"
          - pattern: const $VAR = "$VALUE"
      - metavariable-regex:
          metavariable: $VAR
          regex: (?i).*(jwt[_-]?secret|token[_-]?secret|signing[_-]?key).*
      - metavariable-regex:
          metavariable: $VALUE
          regex: ^[A-Za-z0-9+/=_-]{20,}$
    message: |
      Hardcoded JWT secret key detected (MASVS-CODE).
      JWT signing secrets should never be hardcoded in mobile apps.
      Token signing should be performed server-side only.
    severity: ERROR
    languages:
      - java
      - kotlin
      - swift
      - objc
      - javascript
      - typescript
    metadata:
      category: security
      cwe: "CWE-321: Use of Hard-coded Cryptographic Key"
      owasp-mobile: "M9: Insecure Data Storage"
      maswe: "MASWE-0013"
      masvs: "MASVS-CODE-4"
      confidence: HIGH

  - id: mastg-hardcoded-database-credentials
    patterns:
      - pattern-either:
          - pattern: |
              $CONN = DriverManager.getConnection($URL, "$USER", "$PASS")
          - pattern: |
              Database.connect(username: "$USER", password: "$PASS")
    message: |
      Hardcoded database credentials detected (MASVS-CODE).
      Database credentials should never be hardcoded. Use secure configuration
      and credential management systems.
    severity: ERROR
    languages:
      - java
      - kotlin
      - swift
    metadata:
      category: security
      cwe: "CWE-798: Use of Hard-coded Credentials"
      owasp-mobile: "M9: Insecure Data Storage"
      maswe: "MASWE-0005"
      masvs: "MASVS-CODE-4"
      confidence: HIGH

  - id: mastg-hardcoded-encryption-key
    patterns:
      - pattern-either:
          - pattern: |
              $KEY = new byte[] { ..., ..., ..., ..., ..., ..., ..., ... }
          - pattern: |
              let $KEY: [UInt8] = [..., ..., ..., ..., ..., ..., ..., ...]
          - pattern: |
              byte[] $KEY = { ..., ..., ..., ..., ..., ..., ..., ... }
    message: |
      Hardcoded encryption key detected (MASVS-CODE).
      Encryption keys should never be hardcoded as byte arrays.
      Generate keys using secure random generators and store in
      Android Keystore or iOS Keychain.
    severity: ERROR
    languages:
      - java
      - kotlin
      - swift
      - objc
    metadata:
      category: security
      cwe: "CWE-321: Use of Hard-coded Cryptographic Key"
      owasp-mobile: "M10: Insufficient Cryptography"
      maswe: "MASWE-0013"
      masvs: "MASVS-CRYPTO-2"
      confidence: HIGH

  - id: mastg-hardcoded-oauth-secret
    patterns:
      - pattern-either:
          - pattern: $VAR = "$VALUE"
          - pattern: let $VAR = "$VALUE"
          - pattern: const $VAR = "$VALUE"
      - metavariable-regex:
          metavariable: $VAR
          regex: (?i).*(client[_-]?secret|oauth[_-]?secret|consumer[_-]?secret).*
      - metavariable-regex:
          metavariable: $VALUE
          regex: ^[A-Za-z0-9+/=_-]{20,}$
    message: |
      Hardcoded OAuth client secret detected (MASVS-CODE).
      Client secrets should not be embedded in mobile apps as they can be
      extracted. Use PKCE flow for mobile OAuth or implement backend proxy.
    severity: ERROR
    languages:
      - java
      - kotlin
      - swift
      - objc
      - javascript
      - typescript
    metadata:
      category: security
      cwe: "CWE-798: Use of Hard-coded Credentials"
      owasp-mobile: "M9: Insecure Data Storage"
      maswe: "MASWE-0005"
      masvs: "MASVS-CODE-4"
      confidence: HIGH
